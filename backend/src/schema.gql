# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

input ChangePasswordInput {
  """User's new password"""
  newPassword: String!

  """User's current password"""
  oldPassword: String!
}

type Comment {
  """Comment's author"""
  author: User!

  """User id"""
  authorId: Int!
  children: [Comment!]!

  """The comment text"""
  content: String!

  """Comment's creation date"""
  createdAt: Timestamp!

  """Comment id"""
  id: Int!
  likes: [CommentLike!]!

  """Parent comment id"""
  parent: Int

  """Post to which this comment is attached"""
  post: Post!

  """Post id"""
  postId: Int!

  """Reply to which comment"""
  replyTo: Int

  """User id to which this comment is a reply"""
  replyToUserId: Int

  """User to which this comment is a reply"""
  replyUser: User

  """Comment's last update date"""
  updatedAt: Timestamp!
}

type CommentLike {
  author: User!
  authorId: Int!
  comment: Comment!
  commentId: Int!

  """Comment like id"""
  id: Int!
}

"""Create comment input"""
input CreateCommentInput {
  """The comment text"""
  content: String!

  """Post id"""
  postId: Int!
}

input CreatePostInput {
  content: String!
  pictureId: Int!
  title: String!
}

input DeleteCommentInput {
  """Comment id"""
  commentId: Int!
}

type FileUpload {
  """Is this upload attached to any post or user avatar"""
  attached: Boolean!

  """Picture's creation date"""
  createdAt: Timestamp!

  """Picture's file name"""
  fileName: String!

  """Path to the picture"""
  filePath: String!

  """Picture's file size"""
  fileSize: Int!

  """Picture's file type"""
  fileType: String!

  """The unique identifier of the picture"""
  id: Int!
}

input LikeCommentInput {
  """Comment id"""
  commentId: Int!
}

input LoginInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

type Mutation {
  changePassword(changePasswordDetails: ChangePasswordInput!): User!
  createComment(details: CreateCommentInput!): Comment!

  """Create a new post"""
  createPost(details: CreatePostInput!): Post!
  deleteComment(details: DeleteCommentInput!): Comment!

  """Delete a post"""
  deletePost(
    """ID of the post"""
    id: Int

    """Slug of the post"""
    slug: String
  ): Post!
  deleteUpload(
    """Id of the upload"""
    id: Int!
  ): FileUpload!
  likeComment(details: LikeCommentInput!): CommentLike!
  logIn(loginDetails: LoginInput!): Auth!

  """Publish a post"""
  publish(
    """ID of the post"""
    id: Int

    """Slug of the post"""
    slug: String
  ): Post!
  refreshToken(refreshTokenDetails: RefreshTokenInput!): Token!
  replyToComment(details: ReplyToCommentInput!): Comment!
  signUp(signupDetails: SignUpInput!): Auth!
  updateMyAvatar(details: UpdateUserAvatarInput!): FileUpload!

  """Update a post"""
  updatePost(details: UpdatePostInput!, id: Int!): Post!
  updateUser(details: UpdateUserInput!): User!
  uploadFile(file: Upload!): FileUpload!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  totalCount: Int!
  totalPages: Int!
}

type PaginatedComment {
  nodes: [Comment!]
  pageInfo: PageInfo!
}

type PaginatedPost {
  nodes: [Post!]
  pageInfo: PageInfo!
}

type Post {
  """The author of the post"""
  author: User!

  """The unique identifier of the author of the post"""
  authorId: Int!

  """Amount of the post's comments"""
  commentsCount: Int!

  """Post's content"""
  content: String!

  """Post's creation date"""
  createdAt: Timestamp!

  """The unique identifier of the post"""
  id: Int!

  """Amount of likes of the post"""
  likesCount: Int!

  """The picture of the post"""
  picture: FileUpload!

  """The unique identifier of the picture of the post"""
  pictureId: Int!

  """Is post published?"""
  published: Boolean!

  """Post's slug"""
  slug: String!

  """Post's title"""
  title: String!

  """Post's last update date"""
  updatedAt: Timestamp!
}

type Profile {
  commentsCount: Int!

  """User's description"""
  description: String

  """The unique identifier of the user"""
  id: Int!

  """Users's last active date"""
  lastActivedAt: Timestamp!
  likesCount: Int!

  """User's name"""
  name: String!
  picture: FileUpload

  """User's avatar id"""
  pictureId: Int
  postsCount: Int!
  recentComments: [Comment!]!
  recentPosts: [Post!]!
}

type Query {
  """Get all posts"""
  allPosts(
    """Current page"""
    limit: Int = 10

    """Current page"""
    page: Int!
  ): PaginatedPost!
  comments(
    """Current page"""
    limit: Int = 10

    """Current page"""
    page: Int!

    """Post id"""
    postId: Int!
  ): PaginatedComment!
  emailExists(email: String!): Boolean!
  getAllUsers(
    """Current page"""
    limit: Int = 10

    """Current page"""
    page: Int!
  ): [User!]!
  getMe: User!
  getMyUploads: [FileUpload!]!
  getProfile(id: Int!): Profile!
  getUser(id: Int!): User!

  """Get your posts posts"""
  myPosts(
    """Current page"""
    limit: Int = 10

    """Current page"""
    page: Int!
  ): PaginatedPost!

  """Get a post by id or slug"""
  post(
    """ID of the post"""
    id: Int

    """Slug of the post"""
    slug: String
  ): Post!

  """Get all published posts"""
  publishedPosts(
    """Current page"""
    limit: Int = 10

    """Current page"""
    page: Int!

    """Search Text"""
    searchText: String
  ): PaginatedPost!
}

input RefreshTokenInput {
  """Refresh token"""
  token: String!
}

input ReplyToCommentInput {
  """The comment text"""
  content: String!

  """Post id"""
  postId: Int!

  """Reply to which post"""
  replyTo: Int!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignUpInput {
  """User email"""
  email: String!

  """User name"""
  name: String!

  """User password"""
  password: String!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Token {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

input UpdatePostInput {
  content: String
  pictureId: Int
  title: String
}

input UpdateUserAvatarInput {
  """User name"""
  pictureId: Int
}

input UpdateUserInput {
  """User description"""
  description: String

  """User email"""
  email: String

  """The unique identifier of the user"""
  id: Int

  """User name"""
  name: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  """Users's creation date"""
  createdAt: Timestamp!

  """User's description"""
  description: String

  """User's email"""
  email: String!

  """The unique identifier of the user"""
  id: Int!

  """Users's last active date"""
  lastActivedAt: Timestamp!

  """User's name"""
  name: String!

  """Users's avatar"""
  picture: FileUpload

  """User's avatar id"""
  pictureId: Int

  """User's role"""
  role: Role!
}
